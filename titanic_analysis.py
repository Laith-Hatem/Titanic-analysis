# -*- coding: utf-8 -*-
"""Titanic-Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SsBs9U3XgvETg6m1Hsa4cek3GL9fIM87

# import the **libraries**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""#Read the **Data**"""

df = pd.read_csv('/content/titanic.csv')

df.head(5)

df.columns

df.shape

"""# We will start with the **analysis**"""

df.survived.value_counts() , df.alive.value_counts()

"""# So they arer the same, meaning we've got ot drop  'alive' feature"""

df.drop('alive',axis = 1 , inplace=True)

df.describe()

df.info()

"""# We see that 'age' feature contains lot of **missing values**

# Depending on the following analysis we will fill in the missing values
"""

sns.boxplot(x='pclass', y='age', data=df)
plt.title('Age Distribution by Passenger Class')
plt.show()

sns.boxplot(x='sex', y='age', data=df)
plt.title('Age Distribution by Gender')
plt.show()

df.groupby(['pclass', 'sex', 'alone'])['age'].median()

df['age'] = df.groupby(['pclass', 'sex', 'alone'])['age'].transform('median')

"""# We filled the ***age*** missing values in each subset *'pclass', 'sex', 'alone'* with **median** by using **groupby** and **transform** methods



"""

df.info()

"""# We see that deck feature has a lot of null values so we've got ot drop it too."""

df.drop('deck' , axis = 1 , inplace = True)

"""# **Let** us see if the class had an impact of the survived people"""

df.groupby('pclass')['survived'].mean()

survival_rate_by_class = df.groupby('pclass')['survived'].mean()
sns.barplot(x=survival_rate_by_class.index, y=survival_rate_by_class.values)
plt.title('Survival Rate by Passenger Class')
plt.xlabel('Passenger Class')
plt.ylabel('Survival Rate')
plt.show()

"""# We can see that class 1 has a great chance to survive

# has the **gender** impact too ?
"""

survival_rate_by_gender = df.groupby('sex')['survived'].mean()

survival_rate_by_gender

sns.barplot(x=survival_rate_by_gender.index, y=survival_rate_by_gender.values)
plt.title('Survival Rate by Gender')
plt.xlabel('Gender')
plt.ylabel('Survival Rate')
plt.show()

"""#As we can see that females had a really bigger chance

#Let us see if the age had an impact
"""

sns.histplot(df[df['survived'] == 1]['age'], color='green', label='Survived')
sns.histplot(df[df['survived'] == 0]['age'], color='red', label='Did Not Survive')
plt.title('Age Distribution of Survivors vs. Non-Survivors')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.legend()
plt.show()

"""# if you are between 30 and 40 your chance to survive is very big

#We need now to see if the family size had an impact
"""

df['family_size'] = df['sibsp'] + df['parch'] + 1 # The 1 is the passenger himself
survival_rate_by_family_size = df.groupby('family_size')['survived'].mean()
sns.lineplot(x=survival_rate_by_family_size.index, y=survival_rate_by_family_size.values)
plt.title('Survival Rate by Family Size')
plt.xlabel('Family Size')
plt.ylabel('Survival Rate')
plt.show()

"""# Exciting insights! the family size had a bag impact you can say

# Let us see the correlation between the features
"""

df.info()

survival_rate_by_embarked = df.groupby('embarked')['survived'].mean()
sns.barplot(x=survival_rate_by_embarked.index, y=survival_rate_by_embarked.values)
plt.title('Survival Rate by Embarkation Port')
plt.xlabel('Embarkation Port')
plt.ylabel('Survival Rate')
plt.show()

"""# We can see that C park is the most likely to survive

# See the correlation between features
"""

sns.pairplot(df)

